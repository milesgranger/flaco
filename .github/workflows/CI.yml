name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - released
      - prereleased
      - edited

jobs:
  test:
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - uses: messense/maturin-action@v1
        name: Build Wheel
        with:
          maturin-version: latest
          command: build
          args: --release --out dist
      - name: Install
        run: |
          python -m pip install flaco --no-index --find-links dist --force-reinstall
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
      - name: Load test data
        run: make load-data
      - name: Test
        run: python -m pytest -v tests/
  
  macos:
    needs: [test]
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --no-default-features --release
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: -i python --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install flaco --no-index --find-links dist --force-reinstall
      - name: Build wheels - universal2
        if: ${{ matrix.python-version >= '3.8' || matrix.python-version == '3.10' }}
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --universal2 --out dist
      - name: Install built wheel - universal2
        if: ${{ matrix.python-version >= '3.8' }}
        run: |
          pip install flaco --no-index --find-links dist --force-reinstall
      - name: Python UnitTest
        run: python -c "import flaco"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
        
  windows:
    needs: [test]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Update rustup
        run: rustup self update
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build
        if: matrix.target == 'x64'
        run: cargo build --release
      - name: Tests
        if: matrix.target == 'x64'
        run: cargo test --no-default-features --release
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -i python --release --out dist
      - name: Install built wheel
        run: |
          pip install flaco --no-index --find-links dist --force-reinstall
      - name: Python UnitTest
        run: python -c "import flaco"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
        
  linux:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Build
      run: cargo build --release
    - name: Tests
      run: cargo test --no-default-features --release
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build Wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: -i ${{ matrix.python-version }} --release --out dist
    - name: Python UnitTest
      if: matrix.target == 'x86_64'
      run: |
        pip install flaco --no-index --find-links dist --force-reinstall
        python -c "import flaco"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
        run: |
          pip install --upgrade wheel pip setuptools twine
          twine upload --skip-existing *