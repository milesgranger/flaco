name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - released
      - prereleased

jobs:

  test:
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - uses: Swatinem/rust-cache@v1
      - name: Build libflaco
        run: cargo build --release
      - name: Install
        run: python -m pip install .[dev]
      - name: Load test data
        run: make load-data
      - name: Test
        run: python setup.py test

  build:
    strategy:
      matrix:
        python: [3.7]
        os: [
          # { os: macos-latest, os_arch: "x64", cibw_arch: "universal2", pip_cache: "~/Library/Caches/pip" },
          { os: "ubuntu-latest", os_arch: "x64", cibw_arch: "x86_64", pip_cache: "~/.cache/pip" },
          { os: "windows-latest", os_arch: "x64", cibw_arch: "AMD64", pip_cache: "~\AppData\Local\pip\Cache" }
        ]

    runs-on: ${{ matrix.os.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.os.os_arch }}
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.os.pip_cache }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - uses: Swatinem/rust-cache@v1

      - name: Build libflaco
        run: cargo build --release

      - name: Install
        run: python -m pip install .[dev]

      - name: Build extension test
        run: python setup.py build_ext

      - name: Build Wheels
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          python -m pip install cibuildwheel==2.2.0a1
          python -m cibuildwheel --archs ${{ matrix.os.cibw_arch }}

      - name: Upload wheels
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ build, test ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
        run: |
          pip install --upgrade wheel pip setuptools twine
          twine upload --skip-existing *
